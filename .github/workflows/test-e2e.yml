# SPDX-FileCopyrightText: 2024 Telefónica Innovación Digital and contributors
# SPDX-License-Identifier: MIT

name: Test E2E

on:
  pull_request:
  push:
    branches:
      - main
      - feat/support-other-languages

concurrency:  
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  statuses: write

jobs:
  test-e2e:
    name: Test E2E
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      # NOTE: This checks the license compliance of the dependencies in the repository with the real configuration
      - name: Check license compliance
        uses: ./
        id: check-license-compliance
        # with:
          # log: "debug"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print outputs
        run: |
          echo "Output report: ${{ steps.check-license-compliance.outputs.report }}"
          echo "Output valid: ${{ steps.check-license-compliance.outputs.valid }}"
          echo "Output found-forbidden: ${{ steps.check-license-compliance.outputs.found-forbidden }}"
          echo "Output found-warning: ${{ steps.check-license-compliance.outputs.found-warning }}"

      # NOTE: Next steps check that the library produces the expected errors when the dependencies are not valid according to the rules
      - name: Test - Case 1
        id: test-01
        uses: ./
        with:
          config: |
            {
              "licenses": {
                "allowed": ["MIT"],
                "forbidden": ["Apache-2.0"]
              }
            }
          reporter: "json"
          fail-on-not-valid: false

      - name: Test - Case 1 - Assert 1 failed
        if: fromJson(steps.test-01.outputs.report).forbidden[0] == null
        run: |
          echo "Test case 1 failed. The check did not found forbidden dependencies" && exit 1

      - name: Test - Case 1 - Assert 2 failed
        if: contains(fromJson(steps.test-01.outputs.report).message, 'Not valid licenses') == false
        run: |
          echo "Test case 1 failed. Read logs for further details" && exit 1

      - name: Test - Case 2
        id: test-02
        uses: ./
        with:
          config: |
            {
              "licenses": {
                "allowed": ["Apache-2.0"],
                "warning": ["MIT"]
              },
            }
          reporter: "json"
          fail-on-not-valid: false

      - name: Test - Case 2 - Assert 1 failed
        if: fromJson(steps.test-02.outputs.report).warning[0] == null
        run: |
          echo "Test case 2 failed. The check did not found warning dependencies" && exit 1

      - name: Test - Case 2 - Assert 2 failed
        if: contains(fromJson(steps.test-02.outputs.report).message, 'Not valid licenses') == false
        run: |
          echo "Test case 2 failed. Read logs for further details" && exit 1    
