<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.telefonica.cross.idp.backend</groupId>
    <artifactId>cross-idp</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <arrow.version>1.2.4</arrow.version>
        <detekt.version>1.23.7</detekt.version>
        <java.version>17</java.version>
        <jjwt.version>0.12.6</jjwt.version>
        <junit.jupiter.version>5.11.4</junit.jupiter.version>
        <junit.platform.version>1.11.4</junit.platform.version>
        <kotlin.version>1.9.25</kotlin.version>
        <kotlin-coroutines.version>1.9.0</kotlin-coroutines.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <mysql.version>8.4.0</mysql.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <micrometer-otel.version>1.2.3</micrometer-otel.version>
        <micrometer-prometheus.version>1.12.3</micrometer-prometheus.version>
        <mockwebserver.version>4.12.0</mockwebserver.version>
        <openapi-webflux.version>2.3.0</openapi-webflux.version>
        <querydsl.version>5.1.0</querydsl.version>
        <reactor.version>3.6.11</reactor.version>
        <spring-boot.version>3.4.2</spring-boot.version>
        <spring-boot-auto.version>2.6.8</spring-boot-auto.version>
        <spring-security.version>6.2.2</spring-security.version>
        <spring-framework.version>6.2.2</spring-framework.version>
        <springmockk.version>4.0.2</springmockk.version>
        <mockk.version>1.13.8</mockk.version>
        <mockito.version>5.4.0</mockito.version>
        <test-containers.version>1.20.4</test-containers.version>
        <paketo-buildpacks-jammy.version>0.4.371</paketo-buildpacks-jammy.version>
        <resilence4j.version>2.2.0</resilence4j.version>
        <shedlock.version>5.16.0</shedlock.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>3.4.2</version>
        <relativePath/>
    </parent>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring-framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>Nexus</id>
            <url>https://nexusng.tuenti.io/repository/maven-group/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-core</artifactId>
            <version>${arrow.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>2.16.1</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
            <version>${kotlin-coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-slf4j</artifactId>
            <version>${kotlin-coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>net.ttddyy.observation</groupId>
            <artifactId>datasource-micrometer-spring-boot</artifactId>
            <version>1.0.6</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-otel</artifactId>
            <version>${micrometer-otel.version}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer-prometheus.version}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core-micrometer</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${openapi-webflux.version}</version>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <classifier>jakarta</classifier>
            <scope>provided</scope>
            <version>${querydsl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>${querydsl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <classifier>jakarta</classifier>
            <version>${querydsl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.slugify</groupId>
            <artifactId>slugify</artifactId>
            <version>3.0.7</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
            <version>${spring-boot-auto.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring-boot3</artifactId>
            <version>${resilence4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-kotlin</artifactId>
            <version>${resilence4j.version}</version>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>${reactor.version}</version>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-spring</artifactId>
            <version>${shedlock.version}</version>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-provider-jdbc-template</artifactId>
            <version>${shedlock.version}</version>
        </dependency>
        <!-- Testing -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${test-containers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-reporting</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${test-containers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <version>${test-containers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-test</artifactId>
            <version>${kotlin-coroutines.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${mockwebserver.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <version>${reactor.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.ninja-squad</groupId>
            <artifactId>springmockk</artifactId>
            <version>${springmockk.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring-security.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.10.2</version>
            <scope>test</scope>
        </dependency>

        <!-- JVM LOGGING -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>7.4</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>libphonenumber</artifactId>
            <version>8.13.53</version>
        </dependency>
    </dependencies>
    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>2.2.6</version>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html</backend>
                            <doctype>book</doctype>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.restdocs</groupId>
                        <artifactId>spring-restdocs-asciidoctor</artifactId>
                        <version>3.0.3</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>kapt</id>
                        <goals>
                            <goal>kapt</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>src/main/kotlin</sourceDir>
                                <sourceDir>src/main/java</sourceDir>
                            </sourceDirs>
                            <annotationProcessorPaths>
                                <annotationProcessorPath>
                                    <groupId>com.querydsl</groupId>
                                    <artifactId>querydsl-apt</artifactId>
                                    <version>${querydsl.version}</version>
                                    <classifier>jakarta</classifier>
                                </annotationProcessorPath>
                                <annotationProcessorPath>
                                    <groupId>org.mapstruct</groupId>
                                    <artifactId>mapstruct-processor</artifactId>
                                    <version>${mapstruct.version}</version>
                                </annotationProcessorPath>
                            </annotationProcessorPaths>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <javaParameters>true</javaParameters>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin/unit</sourceDir>
                                <sourceDir>${project.basedir}/src/test/kotlin/integration</sourceDir>
                                <sourceDir>${project.basedir}/src/test/kotlin/acceptance</sourceDir>
                                <sourceDir>${project.basedir}/src/test/kotlin/fixtures</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                    <javaParameters>true</javaParameters>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                        <arg>-opt-in=kotlin.RequiresOptIn</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <plugin>no-arg</plugin>
                        <plugin>all-open</plugin>
                        <plugin>kotlinx-serialization</plugin>
                    </compilerPlugins>
                    <pluginOptions>
                        <option>all-open:annotation=com.telefonica.cross.idp.backend.main.tracing.Traced</option>
                    </pluginOptions>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-serialization</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!--            Unit Test-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.2</version>
                <dependencies>
                    <dependency>
                        <groupId>me.fabriciorby</groupId>
                        <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
                        <version>1.4.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <groups>unit-test</groups>
                    <includes>
                        <include>**/*Test.*</include>
                    </includes>
                    <statelessTestsetReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
                        <disable>false</disable>
                        <version>3.0</version>
                        <usePhrasedFileName>false</usePhrasedFileName>
                        <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
                        <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
                        <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
                    </statelessTestsetReporter>
                    <consoleOutputReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
                        <disable>false</disable>
                        <encoding>UTF-8</encoding>
                        <usePhrasedFileName>false</usePhrasedFileName>
                    </consoleOutputReporter>
                    <statelessTestsetInfoReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
                        <disable>false</disable>
                        <usePhrasedFileName>false</usePhrasedFileName>
                        <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
                        <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
                    </statelessTestsetInfoReporter>
                    <properties>
                        <configurationParameters>
                            <!--  https://junit.org/junit5/docs/snapshot/user-guide/#writing-tests-parallel-execution -->
                            junit.jupiter.execution.parallel.enabled = true
                            junit.jupiter.execution.parallel.mode.default = same_thread
                            junit.jupiter.execution.parallel.mode.classes.default = same_thread
                            junit.jupiter.execution.parallel.config.strategy = dynamic
                            junit.jupiter.execution.parallel.config.dynamic.factor = 2
                            <!--  junit.jupiter.execution.parallel.config.fixed.parallelism = 10-->
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>
            <!--            Integration Test-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.2</version>
                <dependencies>
                    <dependency>
                        <groupId>me.fabriciorby</groupId>
                        <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
                        <version>1.4.0</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <groups>integration-test, acceptance-test</groups>
                    <includes>
                        <include>**/*Test.*</include>
                    </includes>
                    <statelessTestsetReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
                        <disable>false</disable>
                        <version>3.0</version>
                        <usePhrasedFileName>false</usePhrasedFileName>
                        <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
                        <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
                        <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
                    </statelessTestsetReporter>
                    <consoleOutputReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
                        <disable>false</disable>
                        <encoding>UTF-8</encoding>
                        <usePhrasedFileName>false</usePhrasedFileName>
                    </consoleOutputReporter>
                    <statelessTestsetInfoReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
                        <disable>false</disable>
                        <usePhrasedFileName>false</usePhrasedFileName>
                        <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
                        <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
                    </statelessTestsetInfoReporter>
                    <properties>
                        <configurationParameters>
                            junit.platform.reporting.open.xml.enabled = false
                            junit.platform.reporting.output.dir = target/failsafe-reports
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>

            <!-- Detekt for check-styles -->
            <plugin>
                <groupId>com.github.ozsie</groupId>
                <artifactId>detekt-maven-plugin</artifactId>
                <version>${detekt.version}</version>
                <configuration>
                    <baseline>${basedir}/config/detekt/detekt-baseline.xml</baseline>
                    <config>${basedir}/config/detekt/detekt.yml</config>
                    <autoCorrect>false</autoCorrect>
                    <report>
                        <report>html:${project.build.directory}/reports/detekt/detekt-report.html</report>
                        <report>md:${project.build.directory}/reports/detekt/detekt-report.md</report>
                        <report>xml:${project.build.directory}/reports/detekt/detekt-report.xml</report>
                        <report>sarif:${project.build.directory}/reports/detekt/detekt-report.sarif</report>
                    </report>
                    <autoCorrect>true</autoCorrect>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.gitlab.arturbosch.detekt</groupId>
                        <artifactId>detekt-formatting</artifactId>
                        <version>${detekt.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>io.gitlab.arturbosch.detekt</groupId>
                        <artifactId>detekt-rules-libraries</artifactId>
                        <version>${detekt.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <configuration>
                    <excludes>
                        <exclude>**/application/**/*Error*.kt</exclude>
                        <exclude>**/infrastructure/repository/mapper/*</exclude>
                        <exclude>**/infrastructure/repository/entity/*</exclude>
                        <exclude>**/infrastructure/configuration/*</exclude>
                        <exclude>**/infrastructure/rest/**</exclude>
                        <exclude>**/domain/filter/*</exclude>
                        <exclude>**/domain/model/**/*</exclude>
                        <exclude>**/generated/**/*.class</exclude>
                        <exclude>**/operation/application/api/*</exclude>
                        <exclude>**/operation/infrastructure/api/*</exclude>
                        <exclude>**/permission/*</exclude>
                        <exclude>*.ApiUtil</exclude>
                        <exclude>**/CrossIdpBackendApiApplicationKt</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-unit-and-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/coverage-reports</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/coverage-reports/merged.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.10.0</version>
                <configuration>
                    <additionalProperties>removeEnumValuePrefix=false</additionalProperties>
                    <generatorName>kotlin-spring</generatorName>
                    <modelNamePrefix>Api</modelNamePrefix>
                    <templateDirectory>${project.basedir}/src/main/resources/openapi</templateDirectory>
                    <output>${project.build.directory}/generated/source/openapi/</output>
                    <configOptions>
                        <sourceFolder>src/kotlin/main</sourceFolder>
                        <reactive>false</reactive>
                        <useSpringBoot3>true</useSpringBoot3>
                        <delegatePattern>false</delegatePattern>
                        <interfaceOnly>true</interfaceOnly>
                        <skipDefaultInterface>true</skipDefaultInterface>
                        <documentationProvider>springdoc</documentationProvider>
                        <enumPropertyNaming>UPPERCASE</enumPropertyNaming>
                    </configOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>teams</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/client/teams-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.client.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.client.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>units</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/client/units-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.client.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.client.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>users</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/client/users-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.client.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.client.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>client-command</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/client/clients-commands-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.client.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.client.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>service-unit</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/client/service-unit-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.client.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.client.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>projects</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/project/projects-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.project.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.project.infrastructure.rest.dto
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>environments</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/project/environments-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.project.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.project.infrastructure.rest.dto
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>projects-commands</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/project/projects-commands-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.project.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.project.infrastructure.rest.dto
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>components</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/project/components-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.project.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.project.infrastructure.rest.dto
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>component-catalog-item</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/project/component-catalog-item-openapi.yml
                            </inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.project.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.project.infrastructure.rest.dto
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>catalog-item</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/catalog/catalog-item-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.catalog.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.catalog.infrastructure.rest.dto
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>iam</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/iam/iam-aggregates-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.iam.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.iam.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>principal-group</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/iam/principal-groups-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.iam.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.iam.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>user-principal</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/iam/user-principal-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.iam.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.iam.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>group-role</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/iam/group-roles-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.iam.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.iam.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>role</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/iam/roles-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.iam.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.iam.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>group</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/iam/groups-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.iam.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.iam.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>sso</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/sso/sso-users-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.sso.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.sso.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tasks</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/management/tasks-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.management.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.management.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>executionplatform-stage</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/executionplatform/stage-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>users-principal</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/iam/user-principal-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.iam.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.iam.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>executionplatform-platform</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/executionplatform/platform-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>executionplatform-projectinstallation</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/executionplatform/project-installations-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>executionplatform-commands</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/executionplatform/executionplatform-commands-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>executionplatform-platform-serviceunit</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/executionplatform/platform-serviceunit-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>executionplatform-project-platforms</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/executionplatform/project-platform-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>executionplatform-environment-platforms</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/docs/openapi/executionplatform/environment-platform-openapi.yml</inputSpec>
                            <packageName>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest</packageName>
                            <modelPackage>com.telefonica.cross.idp.backend.executionplatform.infrastructure.rest.dto</modelPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <image>
                        <builder>paketobuildpacks/builder-jammy-base:${paketo-buildpacks-jammy.version}</builder>
                        <env>
                            <BP_JVM_VERSION>23.*</BP_JVM_VERSION>
                        </env>
                    </image>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
